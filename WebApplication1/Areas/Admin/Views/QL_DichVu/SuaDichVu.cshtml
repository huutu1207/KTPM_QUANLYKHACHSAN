@model WebApplication1.Models.DICHVU
@{
    ViewBag.Title = "Sửa Dịch Vụ";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sửa Dịch Vụ</title>
    <link rel="stylesheet" href="~/StyleCSS/SuaDV.css" />
    <style>
        .img-preview, .current-img-preview {
            max-width: 150px;
            max-height: 150px;
            margin-top: 10px;
            display: block;
        }

        .custom-file-label::after { /* Để hiển thị chữ "Browse" hoặc "Chọn" tùy theo ngôn ngữ trình duyệt */
            content: "Browse";
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="page-header">
            <h2>Sửa Thông Tin Dịch Vụ</h2>
        </div>

        <div class="form-container">
            @* QUAN TRỌNG: Thay "Ql_DichVu" bằng tên Controller thực tế của bạn *@
            @using (Html.BeginForm("SuaDichVu", "Ql_DichVu", new { area = "Admin" }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-header">
                    <h4>Thông tin chi tiết Dịch Vụ</h4>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MaDV)

                <div class="form-group">
                    <label for="MaDV" class="control-label">Mã Dịch Vụ</label>
                    <div class="form-control-container">
                        @Html.TextBoxFor(model => model.MaDV, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TenDV, "Tên Dịch Vụ", new { @class = "control-label" })
                    <div class="form-control-container">
                        @Html.EditorFor(model => model.TenDV, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập tên dịch vụ" } })
                        @Html.ValidationMessageFor(model => model.TenDV, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mota, "Mô Tả", new { @class = "control-label" })
                    <div class="form-control-container">
                        @Html.TextAreaFor(model => model.Mota, new { @class = "form-control", rows = 4, placeholder = "Nhập mô tả chi tiết về dịch vụ" })
                        @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gia, "Giá", new { @class = "control-label" })
                    <div class="form-control-container">
                        @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "10", placeholder = "Nhập giá dịch vụ" } })
                        @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
                    </div>
                </div>

                @* ----- PHẦN XỬ LÝ ẢNH ĐÃ THAY ĐỔI ----- *@
                <div class="form-group">
                    @Html.LabelFor(model => model.AnhDichVu, "Ảnh Dịch Vụ", new { @class = "control-label" })
                    <div class="form-control-container">
                        @* Hiển thị ảnh hiện tại nếu có *@
                        @if (!string.IsNullOrEmpty(Model.AnhDichVu))
                        {
                            <div class="mb-2">
                                <p>Ảnh hiện tại:</p>
                                <img src="@Url.Content("~/Images/DichVu/" + Model.AnhDichVu)" alt="Ảnh hiện tại của @Model.TenDV" class="current-img-preview img-thumbnail" />
                                @Html.HiddenFor(model => model.AnhDichVu) @* Gửi lại tên ảnh cũ nếu không thay đổi *@
                            </div>
                        }
                        else
                        {
                            <p>Chưa có ảnh đại diện.</p>
                        }

                        <p>Chọn ảnh mới (nếu muốn thay đổi):</p>
                        <div class="custom-file">
                            @* Tên "AnhUpload" phải khớp với tham số HttpPostedFileBase trong Controller *@
                            <input type="file" class="custom-file-input" id="AnhUpload" name="AnhUpload" accept="image/*">
                            <label class="custom-file-label" for="AnhUpload">Chọn tệp ảnh...</label>
                        </div>
                        @Html.ValidationMessageFor(model => model.AnhDichVu, "", new { @class = "text-danger" })

                        @* Vùng xem trước ảnh mới được chọn *@
                        <div id="imagePreview" class="mt-2"></div>
                    </div>
                </div>
                @* ----- KẾT THÚC PHẦN XỬ LÝ ẢNH ----- *@

                <div class="form-group">
                    <div class="form-actions">
                        <input type="submit" value="Lưu Thay Đổi" class="btn btn-primary" />
                        @* Nhớ thay "QL_DichVu" bằng tên Controller thực tế *@
                        @Html.ActionLink("Hủy", "DSDichVu", "QL_DichVu", new { area = "Admin" }, new { @class = "btn btn-default" })
                    </div>
                </div>
            }
        </div>
    </div>

    @* Thêm jQuery và Bootstrap JS nếu bạn dùng các thành phần JS của Bootstrap *@
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        // JavaScript để hiển thị tên file và xem trước ảnh mới chọn
        document.getElementById('AnhUpload').addEventListener('change', function (e) {
            var fileName = "";
            if (e.target.files.length > 0) {
                fileName = e.target.files[0].name;
            } else {
                fileName = "Chọn tệp ảnh...";
            }
            // Cập nhật label của custom-file-input
            var nextSibling = e.target.nextElementSibling;
            if (nextSibling && nextSibling.classList.contains('custom-file-label')) {
                nextSibling.innerText = fileName;
            }

            // Xem trước ảnh mới
            var preview = document.getElementById('imagePreview');
            preview.innerHTML = ''; // Xóa ảnh xem trước cũ

            if (e.target.files && e.target.files.length > 0) {
                var img = document.createElement('img');
                img.src = URL.createObjectURL(e.target.files[0]);
                img.classList.add('img-preview', 'img-thumbnail'); // Thêm class img-thumbnail cho đẹp
                preview.appendChild(img);
            }
        });
    </script>
    @* Bao gồm script cho client-side validation nếu có *@
    @* @RenderSection("scripts", required: false) *@
</body>
</html>