@model WebApplication1.Models.KHACHHANG

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>KHACHHANG</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaKH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaKH, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.MaKH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CCCD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CCCD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CCCD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuocTich, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuocTich, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuocTich, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary text-white" /> | 
                <a href="@Url.Action("DanhSachKhachHang", "QL_KhachHang")" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
}


<style>
    /* Main Form Container */
    .form-horizontal {
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        padding: 35px;
        margin-bottom: 40px;
        position: relative;
        border: 1px solid #f0f0f0;
    }

    /* Page Heading */
    h2 {
        font-size: 28px;
        font-weight: 700;
        color: #333;
        margin-bottom: 25px;
        position: relative;
        padding-bottom: 15px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        h2:after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 70px;
            height: 4px;
            background: linear-gradient(to right, #6a11cb, #2575fc);
            border-radius: 2px;
        }

    /* Form Section Heading */
    h4 {
        font-size: 20px;
        font-weight: 600;
        color: #444;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #f0f0f0;
    }

    /* Form Groups - Row Container */
    .form-group {
        margin-bottom: 25px;
        position: relative;
        padding: 0 15px;
    }

    /* Form Labels */
    .control-label {
        font-weight: 600;
        color: #444;
        font-size: 15px;
        padding-top: 10px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    /* Form Controls - Input Fields */
    .form-control {
        height: 48px;
        border-radius: 6px;
        border: 2px solid #e6e6e6;
        padding: 10px 15px;
        font-size: 15px;
        transition: all 0.3s ease;
        box-shadow: none;
        background-color: #f9fafc;
    }

        .form-control:focus {
            border-color: #2575fc;
            box-shadow: 0 0 0 0.2rem rgba(37, 117, 252, 0.15);
            background-color: #fff;
        }

        /* Read-only Fields */
        .form-control[readonly] {
            background-color: #f0f2f5;
            border-color: #ddd;
            color: #666;
            cursor: not-allowed;
        }

    /* Validation Messages */
    .text-danger {
        font-size: 13px;
        margin-top: 6px;
        display: block;
        font-weight: 500;
    }

    /* Validation Summary */
    .validation-summary-errors {
        background-color: #feebeb;
        border-left: 4px solid #dc3545;
        padding: 15px;
        margin-bottom: 25px;
        border-radius: 4px;
    }

        .validation-summary-errors ul {
            margin-bottom: 0;
            padding-left: 20px;
        }

    /* Form Buttons Container */
    .form-group:last-child {
        margin-top: 35px;
        border-top: 1px solid #f0f0f0;
        padding-top: 25px;
    }

    /* Primary Submit Button */
    .btn-primary {
        background: linear-gradient(to right, #6a11cb, #2575fc);
        border: none;
        color: white;
        padding: 12px 30px;
        font-size: 15px;
        font-weight: 600;
        border-radius: 6px;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        box-shadow: 0 4px 15px rgba(106, 17, 203, 0.3);
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background: linear-gradient(to right, #5710b2, #1e64d5);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(106, 17, 203, 0.4);
        }

    /* Secondary Button */
    .btn-secondary {
        background-color: #f0f2f5;
        border: none;
        color: #333;
        padding: 12px 25px;
        font-size: 15px;
        font-weight: 600;
        border-radius: 6px;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .btn-secondary:hover {
            background-color: #e6e9ee;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
        }

    /* Date Input Styling */
    input[type="date"].form-control {
        padding-top: 0;
        padding-bottom: 0;
    }

    /* Focus Effects */
    input:focus, select:focus, textarea:focus {
        outline: none !important;
    }

    /* Label Hover Effect */
    .control-label:hover {
        color: #2575fc;
        cursor: pointer;
    }

    /* Required Field Indicator */
    .control-label.required:after {
        content: '*';
        color: #dc3545;
        margin-left: 4px;
    }

    /* Input Icons - Position Relative for Potential Icons */
    .col-md-10 {
        position: relative;
    }

    /* Card Style Enhancement */
    .card-style {
        border-radius: 12px;
        background-color: #fff;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.07);
        padding: 30px;
    }

    /* Form Section Divider */
    .form-section {
        margin-top: 35px;
        margin-bottom: 25px;
        padding-top: 10px;
        border-top: 1px dashed #e0e0e0;
    }

    /* Form Section Title */
    .form-section-title {
        font-size: 18px;
        font-weight: 600;
        color: #444;
        margin-bottom: 20px;
    }

    /* Input Group Styling */
    .input-group-text {
        background-color: #f0f2f5;
        border: 2px solid #e6e6e6;
        color: #555;
        padding: 0 15px;
    }

    .input-group .form-control {
        border-left: 0;
    }

    /* Special Field Styles */
    .phone-input.form-control {
        letter-spacing: 1px;
        font-family: 'Consolas', monospace;
    }

    .email-input.form-control {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Field Success State */
    .has-success .form-control {
        border-color: #28a745;
        background-color: #f8fff9;
    }

    /* Field Error State */
    .has-error .form-control {
        border-color: #dc3545;
        background-color: #fff9fa;
    }

    /* Gender Radio Buttons Enhancement */
    .gender-options {
        display: flex;
        gap: 20px;
    }

    .gender-option {
        position: relative;
        padding-left: 25px;
        cursor: pointer;
        font-size: 15px;
    }

        .gender-option input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
        }

    .gender-checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 18px;
        width: 18px;
        background-color: #f0f2f5;
        border: 2px solid #e6e6e6;
        border-radius: 50%;
    }

    .gender-option:hover .gender-checkmark {
        background-color: #e6e6e6;
    }

    .gender-option input:checked ~ .gender-checkmark {
        background-color: #2575fc;
        border-color: #2575fc;
    }

    .gender-checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    .gender-option input:checked ~ .gender-checkmark:after {
        display: block;
    }

    .gender-option .gender-checkmark:after {
        top: 3px;
        left: 3px;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background: white;
    }

    /* Field Hover Effects */
    .form-control:hover {
        border-color: #c3d2f4;
    }

    /* Password Field */
    .password-field {
        position: relative;
    }

    .password-toggle {
        position: absolute;
        right: 10px;
        top: 14px;
        color: #888;
        cursor: pointer;
    }

    /* Select Input Enhancement */
    select.form-control {
        appearance: none;
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23555555'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 10px center;
        background-size: 20px;
        padding-right: 30px;
    }

    /* Form Background Enhancement */
    .form-bg {
        position: relative;
        overflow: hidden;
    }

        .form-bg:before {
            content: '';
            position: absolute;
            top: -100px;
            right: -100px;
            width: 300px;
            height: 300px;
            border-radius: 50%;
            background: linear-gradient(45deg, rgba(106, 17, 203, 0.05), rgba(37, 117, 252, 0.05));
            z-index: -1;
        }

        .form-bg:after {
            content: '';
            position: absolute;
            bottom: -100px;
            left: -100px;
            width: 300px;
            height: 300px;
            border-radius: 50%;
            background: linear-gradient(45deg, rgba(37, 117, 252, 0.05), rgba(106, 17, 203, 0.05));
            z-index: -1;
        }

    /* Form Column Layout */
    .col-md-2 {
        width: 16.66666667%;
        float: left;
        position: relative;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
    }

    .col-md-10 {
        width: 83.33333333%;
        float: left;
        position: relative;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
    }

    .col-md-offset-2 {
        margin-left: 16.66666667%;
    }

    /* Form Clear Fix */
    .form-group:after {
        content: "";
        display: table;
        clear: both;
    }

    /* Card Header Decoration */
    .card-header-decoration {
        position: absolute;
        top: 0;
        right: 0;
        width: 150px;
        height: 150px;
        background: linear-gradient(135deg, transparent 50%, rgba(37, 117, 252, 0.1) 50%);
        border-radius: 0 12px 0 0;
    }

    /* Form Help Text */
    .help-text {
        font-size: 12px;
        color: #6c757d;
        margin-top: 5px;
    }

    /* Button Icons */
    .btn-primary:before {
        content: "💾 ";
    }

    .btn-secondary:before {
        content: "← ";
    }

    /* Custom Placeholder Color */
    ::placeholder {
        color: #adb5bd;
        opacity: 1;
    }

    /* Horizontal Rule Enhancement */
    hr {
        border: 0;
        height: 1px;
        background: linear-gradient(to right, transparent, #e0e0e0, transparent);
        margin: 25px 0;
    }

    /* Tooltip Styling */
    .tooltip {
        position: relative;
        display: inline-block;
        cursor: pointer;
    }

        .tooltip .tooltiptext {
            visibility: hidden;
            width: 200px;
            background-color: #333;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 10px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 12px;
            line-height: 1.4;
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
</style>